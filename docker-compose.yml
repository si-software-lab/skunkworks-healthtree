version: "3.8"

services:
  # =========================
  # Messaging (local, PLAINTEXT)
  # =========================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

  # =========================
  # OpenSearch + Dashboards
  # =========================
  opensearch:
    image: opensearchproject/opensearch:2.15.0
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
      - plugins.security.disabled=true
      - cluster.name=hb-demo-cluster
      - node.name=hb-node-1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9600:9600"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30

  dashboards:
    image: opensearchproject/opensearch-dashboards:2.15.0
    container_name: opensearch-dashboards
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - "5601:5601"
    depends_on:
      opensearch:
        condition: service_healthy

  # =========================
  # Neo4j (optional local graph)
  # =========================
  neo4j:
    image: neo4j:5
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/test
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4JLABS_PLUGINS=["apoc"]
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:7474 >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

  # =========================
  # Your services
  # =========================
  wolfram-scorer:
    build: ./services/wolfram_scorer
    container_name: wolfram-scorer
    environment:
      - PORT=8088
    ports:
      - "8088:8088"

  event-indexer:
    build: ./services/opensearch_indexer
    container_name: event-indexer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      # ASCII topic names only â€” no Unicode arrows.
      - KAFKA_TOPICS=ems.licensing.events.compliance,ems.encounter.metadata.analytics,ems.transport.status.dash,ems.sanctions.events.compliance,ems.vehicle.status.ops
      - OPENSEARCH_URL=http://opensearch:9200
      - OPENSEARCH_INDEX_PREFIX=events-
    depends_on:
      kafka:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  graph-upserter:
    build: ./services/neo4j_upserter
    container_name: graph-upserter
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPICS=ems.licensing.events.compliance,ems.encounter.metadata.analytics
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=test
    depends_on:
      kafka:
        condition: service_healthy
      neo4j:
        condition: service_healthy