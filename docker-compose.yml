# docker-compose.yml

services:
  # ---------- Messaging ----------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      # Listen on all interfaces in the container, advertise as "kafka" to other containers
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_BROKER_ID: "1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    restart: unless-stopped

  # ---------- OpenSearch + Dashboards ----------
  opensearch:
    image: opensearchproject/opensearch:2.15.0
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
      # Make 2.12+ images happy and also disable security for a frictionless demo
      - plugins.security.disabled=true
      - DISABLE_SECURITY_PLUGIN=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=AdminPass_123
      - cluster.name=hb-demo-cluster
      - node.name=hb-node-1
    ulimits:
      memlock: { soft: -1, hard: -1 }
    ports:
      - "9200:9200"
      - "9600:9600"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200 >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    restart: unless-stopped

  dashboards:
    image: opensearchproject/opensearch-dashboards:2.15.0
    container_name: opensearch-dashboards
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - "5601:5601"
    depends_on:
      opensearch:
        condition: service_healthy
    restart: unless-stopped

  # ---------- Graph DB ----------
  neo4j:
    image: neo4j:5
    container_name: neo4j
    environment:
      # Must be >= 8 chars
      - NEO4J_AUTH=neo4j/StrongerPw_123
      # Proper plugin var for Neo4j 5
      - NEO4J_PLUGINS=["apoc"]
      # Uncomment if you still see min-length complaints (rare):
      # - NEO4J_dbms_security_auth__minimum__password__length=8
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
      - neo4j-plugins:/plugins
    restart: unless-stopped

  # ---------- Your services ----------
  wolfram-scorer:
    build: ./services/wolfram_scorer
    container_name: wolfram-scorer
    environment:
      - PORT=8088
    ports:
      - "8088:8088"
    restart: unless-stopped

  event-indexer:
    build: ./services/opensearch_indexer
    container_name: event-indexer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      # ASCII-only topic names (no Unicode arrows)
      - KAFKA_TOPICS=ems.licensing.events.compliance,ems.encounter.metadata.analytics,ems.transport.status.dash,ems.sanctions.events.compliance,ems.vehicle.status.ops
      - OPENSEARCH_URL=http://opensearch:9200
      - OPENSEARCH_INDEX_PREFIX=events-
    depends_on:
      opensearch:
        condition: service_healthy
      kafka:
        condition: service_started
    restart: unless-stopped

  graph-upserter:
    build: ./services/neo4j_upserter
    container_name: graph-upserter
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPICS=ems.licensing.events.compliance,ems.encounter.metadata.analytics
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=StrongerPw_123
    depends_on:
      neo4j:
        condition: service_started
      kafka:
        condition: service_started
    restart: unless-stopped

volumes:
  opensearch-data:
  neo4j-data:
  neo4j-plugins: