# arc_values.yaml — Kafka (Bitnami) with SASL + TLS and external access

# --- Replicas (KRaft mode is default in recent Bitnami charts)
controller:
  replicaCount: 3
broker:
  replicaCount: 3

# --- Listeners (use SASL_SSL externally, SASL_PLAINTEXT inside)
listeners:
  client:
    name: CLIENT
    containerPort: 9092
    protocol: SASL_SSL
  controller:
    name: CONTROLLER
    containerPort: 9093
    protocol: SASL_PLAINTEXT
  interbroker:
    name: INTERNAL
    containerPort: 9094
    protocol: SASL_PLAINTEXT
  external:
    name: EXTERNAL
    containerPort: 9095
    protocol: SASL_SSL

  # Map listener names -> security protocol (required when overriding adverts)
  securityProtocolMap: "CONTROLLER:SASL_PLAINTEXT,INTERNAL:SASL_PLAINTEXT,CLIENT:SASL_SSL,EXTERNAL:SASL_SSL"

  # IMPORTANT: set proper advertised listeners for your clients.
  # Replace the hostnames below with your real DNS (LB, Ingress TCP, etc.)
  # Port 443 shown if you’re fronting via TLS passthrough on an L4 Ingress/ELB.
  overrideListeners: ""
  advertisedListeners: >
    CLIENT://kafka.ems-core.svc.cluster.local:9092,
    INTERNAL://kafka-internal.ems-core.svc.cluster.local:9094,
    EXTERNAL://kafka.mycorp.example.com:443

# --- SASL (use PLAIN for broad KRaft compatibility; SCRAM is supported on newer Kafka)
sasl:
  enabledMechanisms: "PLAIN"
  interBrokerMechanism: "PLAIN"
  controllerMechanism: "PLAIN"

  # Declare client usernames (passwords provided via a Secret below)
  client:
    users:
      - ems_app
      - ops_tooling
    # DO NOT set passwords inline. Use an existing secret:
    passwords: ""

  # Use a single secret for all SASL material
  existingSecret: kafka-sasl

  interbroker:
    user: inter_broker_user
    password: ""  # from secret
  controller:
    user: controller_user
    password: ""  # from secret

# --- TLS (auto-generate PEM certs + add SANs for your DNS names)
tls:
  type: PEM
  autoGenerated:
    enabled: true
    engine: helm
    # Add all DNS names clients will connect to (internal + external)
    customAltNames:
      - kafka.ems-core.svc.cluster.local
      - kafka-internal.ems-core.svc.cluster.local
      - kafka.mycorp.example.com

# --- Storage (tune for your cluster)
controller:
  logPersistence:
    enabled: true
    size: 20Gi
broker:
  logPersistence:
    enabled: true
    size: 100Gi

# --- Basic resources (adjust as needed)
controller:
  resourcesPreset: "small"
broker:
  resourcesPreset: "medium"

# --- Metrics (optional; enable if scraping with Prometheus)
metrics:
  jmx:
    enabled: true
  kafka:
    enabled: true